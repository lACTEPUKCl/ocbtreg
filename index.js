import {
  Client,
  GatewayIntentBits,
  Partials,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  EmbedBuilder,
  AttachmentBuilder,
  Collection,
  Events,
} from "discord.js";
import getCommands from "./commands/getCommands.js";
import { config } from "dotenv";
config();

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.DirectMessages,
  ],
  partials: [Partials.Channel],
});

client.commands = new Collection();
const commands = await getCommands();
for (const command of commands) {
  if ("data" in command && "execute" in command) {
    client.commands.set(command.data.name, command);
  }
}

client.on("ready", () => {
  console.log(`Logged in as ${client.user.tag}!`);
});

client.on("messageCreate", (message) => {
  if (
    message.content === "!setup" &&
    message.channel.id === "1305214122727571578"
  ) {
    const attachment = new AttachmentBuilder("./img/reg.png");
    const embed = new EmbedBuilder()
      .setTitle("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ OCBT")
      .setDescription(
        "–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –∫–æ–º–∞–Ω–¥—ã\n" +
          "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ¬´–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è¬ª –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É:\n" +
          "1) –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã\n" +
          "2) –õ–æ–≥–æ—Ç–∏–ø (—Ñ–∞–π–ª –∏–ª–∏ —Å—Å—ã–ª–∫–∞)\n" +
          "3) –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã\n" +
          "4) SteamID64 –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è\n" +
          "5) –ß–µ–ª–æ–≤–µ–∫ –¥–ª—è —Å–≤—è–∑–∏\n\n" +
          "–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫–∞—Å—Ç–µ—Ä–∞\n" +
          "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ö–∞—Å—Ç–µ—Ä¬ª –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É:\n" +
          "1) –í–∞—à SteamID64\n" +
          "2) –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª"
      )
      .setColor(0x7ebca4);
    const row = new ActionRowBuilder().addComponents(
      new ButtonBuilder()
        .setCustomId("register_team")
        .setLabel("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        .setEmoji("‚úÖ")
        .setStyle(ButtonStyle.Success),
      new ButtonBuilder()
        .setCustomId("register_caster")
        .setLabel("–ö–∞—Å—Ç–µ—Ä")
        .setEmoji("‚òëÔ∏è")
        .setStyle(ButtonStyle.Primary)
    );
    message.channel.send({ files: [attachment] }).then(() => {
      message.channel.send({
        embeds: [embed],
        components: [row],
      });
    });
  }
  if (
    message.content === "!setup" &&
    message.channel.id === "1305214082919698482"
  ) {
    const attachment = new AttachmentBuilder("./img/info.png");
    const importantInfoEmbed = new EmbedBuilder()
      .setTitle("–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
      .setDescription(
        "üèÜ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥:\n\n" +
          "1 –º–µ—Å—Ç–æ ‚Äî 10,000 —Ä—É–±–ª–µ–π\n" +
          "2 –º–µ—Å—Ç–æ ‚Äî 5,000 —Ä—É–±–ª–µ–π\n" +
          "3 –º–µ—Å—Ç–æ ‚Äî VIP –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n\n" +
          "- –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –µ–¥–∏–Ω—ã–π —Ç–µ–≥\n" +
          "- –ù–µ –º–µ–Ω–µ–µ 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –æ–¥–Ω–∏–º —Ç–µ–≥–æ–º\n" +
          "- –°–µ—Ç–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–∞–Ω–¥\n" +
          "- +1-2 —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ –∑–∞–º–µ–Ω—É\n" +
          "- –ü–µ—Ä–µ–∏–≥—Ä–æ–≤–∫–∞ –ø—Ä–∏ –≤—ã–ª–µ—Ç–µ 3+ —á–µ–ª–æ–≤–µ–∫\n" +
          "- –î–æ–ø. —Ä–∞—É–Ω–¥ –ø—Ä–∏ —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ —Ç–∏–∫–µ—Ç–æ–≤\n" +
          "- –ü–µ—Ä–µ–Ω–æ—Å –∏–≥—Ä—ã –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º –±–∞–≥–µ\n" +
          "- –ú–∏–Ω–∏–º—É–º 8 –∫–æ–º–∞–Ω–¥ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞"
      )
      .setColor(0x43b581);
    const navigationEmbed = new EmbedBuilder()
      .setTitle("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
      .setDescription(
        "- <#1305213973934637098> –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏\n" +
          "- <#1305214007359176744> –ü—Ä–∞–≤–∏–ª–∞\n" +
          "- <#1305214122727571578> –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫\n" +
          "- <#1305214160983953458> –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n" +
          "- <#1305214220844924959> –û–±—â–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n" +
          "- <#1305214678867247234> –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–µ—Ç–∫–∞"
      )
      .setColor(0x43b581);
    message.channel.send({ files: [attachment] }).then(() => {
      message.channel.send({
        embeds: [importantInfoEmbed, navigationEmbed],
      });
    });
  }
  if (
    message.content === "!setup" &&
    message.channel.id === "1305214007359176744"
  ) {
    const attachment = new AttachmentBuilder("./img/rules.png");
    const generalRulesEmbed = new EmbedBuilder()
      .setTitle("–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞")
      .setDescription(
        "1. –ó–∞–ø—Ä–µ—â–µ–Ω—ã –ª—é–±—ã–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è (–¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–≥—Ä–æ–∫–∞)\n" +
          "2. –ó–∞–ø—Ä–µ—â–µ–Ω —Ä—É–∏–Ω/–ø–æ–¥—Å—Ç–∞–≤–∞/–¥–æ–≥–æ–≤–æ—Ä–Ω—ã–µ –º–∞—Ç—á–∏ (–¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã)\n" +
          "3. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–≥–∏ (–¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç –º–∞—Ç—á–∞)\n" +
          "4. –û–ø–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –Ω–µ–¥–æ–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤ 20 –º–∏–Ω—É—Ç (–¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è)\n" +
          "5. –ó–∞–ø—Ä–µ—â–µ–Ω—ã —á–∏—Ç—ã, —ç–∫—Å–ø–ª–æ–π—Ç—ã, –ü–û (–¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è, –ø–µ—Ä–º–∞–±–∞–Ω)"
      )
      .setColor(0x9d2235);
    const casterRulesEmbed = new EmbedBuilder()
      .setTitle("–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∫–∞—Å—Ç–µ—Ä–æ–≤")
      .setDescription(
        "1. –ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –Ω–µ –º–µ–Ω–µ–µ 3 –º–∏–Ω—É—Ç\n" +
          "2. –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—Ä—è–¥–∞: ¬´–∫–∞–º–µ—Ä–∞, —Å—Ç—Ä–∏–º, —é—Ç—É–±¬ª –∏ —Ç.–¥.\n" +
          "3. –û—Ç—Ä—è–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–∫—Ä—ã—Ç\n" +
          "4. –£–∫–∞–∑—ã–≤–∞—Ç—å –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ —Ç—É—Ä–Ω–∏—Ä OCBT"
      )
      .setColor(0x9d2235);
    const additionEmbed = new EmbedBuilder()
      .setTitle("–î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ")
      .setDescription(
        "–ü—Ä–∏ –ª—é–±–æ–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç–µ, –Ω–µ –æ–ø–∏—Å–∞–Ω–Ω–æ–º –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö, –Ω–æ –¥–∞—é—â–µ–º –Ω–µ—á–µ—Å—Ç–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ, —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã."
      )
      .setColor(0x9d2235);
    message.channel.send({ files: [attachment] }).then(() => {
      message.channel.send({
        embeds: [generalRulesEmbed, casterRulesEmbed, additionEmbed],
      });
    });
  }
});

client.on(Events.InteractionCreate, async (interaction) => {
  if (interaction.isChatInputCommand()) {
    const command = client.commands.get(interaction.commandName);
    if (!command) return;
    try {
      await command.execute(interaction);
    } catch (error) {
      if (interaction.replied || interaction.deferred) {
        await interaction.followUp({
          content: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.",
          ephemeral: true,
        });
      } else {
        await interaction.reply({
          content: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.",
          ephemeral: true,
        });
      }
    }
  } else if (interaction.isButton()) {
    if (interaction.customId === "register_team") {
      try {
        await interaction.reply({
          content: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã.",
          ephemeral: true,
        });
        registerTeam(interaction);
      } catch {}
    } else if (interaction.customId === "register_caster") {
      try {
        await interaction.reply({
          content: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–∞—Å—Ç–µ—Ä–∞.",
          ephemeral: true,
        });
        registerCaster(interaction);
      } catch {}
    }
  }
});

async function ask(dm, prompt, validate) {
  let attempts = 3;
  while (attempts > 0) {
    await dm.send(prompt);
    try {
      const filter = (m) => !m.author.bot;
      const collected = await dm.awaitMessages({
        filter,
        max: 1,
        time: 300000,
        errors: ["time"],
      });
      const content = collected.first();
      if (!content) return null;
      if (!validate) return content;
      if (validate(content)) return content;
      await dm.send("–í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.");
      attempts--;
    } catch {
      return null;
    }
  }
  return null;
}

function isValidSteamIdValue(value) {
  return /^\d{17}$/.test(value.trim());
}

function isValidImageUrlValue(value) {
  return /^https?:\/\/.*\.(jpg|jpeg|png|gif|webp)(\?.*)?$/i.test(value.trim());
}

async function askForImage(dm, prompt) {
  let attempts = 3;
  while (attempts > 0) {
    await dm.send(prompt);
    try {
      const filter = (m) => !m.author.bot;
      const collected = await dm.awaitMessages({
        filter,
        max: 1,
        time: 300000,
        errors: ["time"],
      });
      const msg = collected.first();
      if (!msg) return null;
      if (msg.attachments.size > 0) {
        const file = msg.attachments.first();
        if (file && file.contentType && file.contentType.startsWith("image/")) {
          return file.url;
        }
        await dm.send("–§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.");
      } else {
        if (isValidImageUrlValue(msg.content)) {
          return msg.content.trim();
        }
        await dm.send(
          "–°—Å—ã–ª–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        );
      }
      attempts--;
    } catch {
      return null;
    }
  }
  return null;
}

async function registerTeam(interaction) {
  try {
    const dm = await interaction.user.createDM();
    const nameMsg = await ask(
      dm,
      "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (–Ω–µ –±–æ–ª–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤):",
      (m) => m.content.trim().length <= 50
    );
    if (!nameMsg) {
      await dm.send("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
      return;
    }
    const teamName = nameMsg.content.trim();
    const logoUrl = await askForImage(
      dm,
      "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–≥–æ—Ç–∏–ø (—Å—Å—ã–ª–∫–∞ –∏–ª–∏ —Ñ–∞–π–ª):"
    );
    if (!logoUrl) {
      await dm.send("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
      return;
    }
    const repMsg = await ask(
      dm,
      "–í–≤–µ–¥–∏—Ç–µ Discord –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥—ã:",
      (m) => m.content.trim().length > 0
    );
    if (!repMsg) {
      await dm.send("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
      return;
    }
    const representative = repMsg.content.trim();
    const steamMsg = await ask(
      dm,
      "–í–≤–µ–¥–∏—Ç–µ SteamID64 –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è (17 —Ü–∏—Ñ—Ä):",
      (m) => isValidSteamIdValue(m.content)
    );
    if (!steamMsg) {
      await dm.send("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
      return;
    }
    const steamId = steamMsg.content.trim();
    const contactMsg = await ask(
      dm,
      "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –¥–ª—è —Å–≤—è–∑–∏:",
      (m) => m.content.trim().length > 0
    );
    if (!contactMsg) {
      await dm.send("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
      return;
    }
    const contact = contactMsg.content.trim();
    const userId = interaction.user.id;
    const member = interaction.guild.members.cache.get(userId);
    const role = interaction.guild.roles.cache.find(
      (r) => r.name === "–£—á–∞—Å—Ç–Ω–∏–∫ OCBT"
    );
    if (role && member) {
      try {
        await member.roles.add(role);
      } catch {}
    }
    const embed = new EmbedBuilder()
      .setColor(0x0099ff)
      .setTitle("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
      .setImage(logoUrl)
      .addFields(
        { name: "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", value: teamName, inline: true },
        { name: "–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å", value: representative, inline: true },
        {
          name: "SteamID64",
          value: `[${steamId}](https://steamcommunity.com/profiles/${steamId})`,
          inline: true,
        },
        { name: "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ", value: contact, inline: true },
        { name: "–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å", value: `<@${userId}>` }
      )
      .setFooter({
        text: `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${interaction.user.tag}`,
        iconURL: interaction.user.displayAvatarURL(),
      });
    const logChannel = interaction.guild.channels.cache.get(
      "1305214571912630322"
    );
    if (!logChannel) {
      await dm.send(
        "–û—à–∏–±–∫–∞: –ö–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
      );
      return;
    }
    await logChannel.send({ embeds: [embed] });
    await dm.send("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!");
  } catch {
    try {
      await interaction.user.send(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –∏—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞."
      );
    } catch {}
  }
}

async function registerCaster(interaction) {
  try {
    const dm = await interaction.user.createDM();
    const steamMsg = await ask(dm, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à SteamID64 (17 —Ü–∏—Ñ—Ä):", (m) =>
      isValidSteamIdValue(m.content)
    );
    if (!steamMsg) {
      await dm.send("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
      return;
    }
    const steamId = steamMsg.content.trim();
    const linkMsg = await ask(
      dm,
      "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª:",
      (m) => m.content.trim().length > 0
    );
    if (!linkMsg) {
      await dm.send("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
      return;
    }
    const channelLink = linkMsg.content.trim();
    const userId = interaction.user.id;
    const member = interaction.guild.members.cache.get(userId);
    const role = interaction.guild.roles.cache.find(
      (r) => r.name === "–£—á–∞—Å—Ç–Ω–∏–∫ OCBT"
    );
    if (role && member) {
      try {
        await member.roles.add(role);
      } catch {}
    }
    const embed = new EmbedBuilder()
      .setColor(0x0099ff)
      .setTitle("–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–∞—Å—Ç–µ—Ä–∞")
      .addFields(
        {
          name: "SteamID",
          value: `[${steamId}](https://steamcommunity.com/profiles/${steamId})`,
        },
        { name: "–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª", value: channelLink },
        { name: "–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å", value: `<@${userId}>` }
      )
      .setFooter({
        text: `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${interaction.user.tag}`,
        iconURL: interaction.user.displayAvatarURL(),
      });
    const logChannel = interaction.guild.channels.cache.get(
      "1305214613985558639"
    );
    if (!logChannel) {
      await dm.send(
        "–û—à–∏–±–∫–∞: –ö–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
      );
      return;
    }
    await logChannel.send({ embeds: [embed] });
    await dm.send("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!");
  } catch {
    try {
      await interaction.user.send(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –∏—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞."
      );
    } catch {}
  }
}

await client.login(process.env.CLIENT_TOKEN);
